name: matrix btop and release

on:
  - workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name: [btop]
        os_id: [alpine]
        os_version_id: [edge]
        arch_type:
          [
            aarch64-linux-musl,
            arm-linux-musleabi,
            arm-linux-musleabihf,
            armv6-linux-musleabihf,
            armv7l-linux-musleabihf,
            i686-linux-musl,
            x86_64-linux-musl,
            mips-linux-musl,
            mipsel-linux-musl,
            mips64-linux-musl,
            mips64el-linux-musl,
            powerpc-linux-musl,
            powerpc64le-linux-musl,
            s390x-linux-musl,
            riscv64-linux-musl,
          ]

    name: ${{ matrix.name }} ${{ matrix.arch_type }}

    env:
      prerelease: false
      XZ_OPT: "-9T0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Host - Create Docker template env file
        run: |
          echo "PATH=/root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" > env.custom
          echo "LD_LIBRARY_PATH=/root/lib:/root/${{ matrix.arch_type }}/lib" >> env.custom

      - name: Host - Create docker multiarch ${{ matrix.arch }} container
        run: docker run --name multiarch -it -d --env-file env.custom -w /root -v ${{ github.workspace }}:/root ${{ matrix.os_id }}:${{ matrix.os_version_id }}

      - name: Docker - apk install build deps
        run: docker exec --env-file env.custom -w /root multiarch apk add autoconf automake build-base coreutils curl findutils git libarchive-tools libtool linux-headers ncurses-dev patch pkgconf xz zip

      - name: Docker target - install qbt-musl-cross-make ${{ matrix.arch_type }}
        run: |
          docker exec --env-file env.custom multiarch curl -sL "https://github.com/userdocs/qbt-musl-cross-make/releases/latest/download/${{ matrix.arch_type }}.tar.xz" > "${{ matrix.arch_type }}.tar.xz"
          docker exec --env-file env.custom multiarch tar xf "${{ matrix.arch_type }}.tar.xz" --strip-components=1 -C /usr/local

      - name: Docker - Git clone btop
        run: docker exec --env-file env.custom -w /root multiarch git clone --single-branch --branch "main" --shallow-submodules --recurse-submodules --depth 1 https://github.com/aristocratos/btop.git btop

      - name: Docker - build ${{ matrix.arch_type }} toolchain
        run: docker exec --env-file env.custom -w /root/btop multiarch make STATIC=true STRIP=true ARCH=${{ matrix.arch_type }} -j"$(nproc)" arch_type=${{ matrix.arch_type }} CC=${{ matrix.arch_type }}-gcc AR=${{ matrix.arch_type }}-ar CXX=${{ matrix.arch_type }}-g++

      - name: Docker - install ${{ matrix.arch_type }} toolchain
        run: docker exec --env-file env.custom -w  /root/btop multiarch make install PREFIX=/root/btop-completed

      - name: Docker - archive ${{ matrix.arch_type }} toolchain
        run: docker exec --env-file env.custom -w /root multiarch tar -cJf ${{ matrix.arch_type }}.tar.xz btop-completed

      - name: Host - Set btop version
        run: echo "btop_version=$(curl -sL https://raw.githubusercontent.com/aristocratos/btop/main/src/btop.cpp | sed -rn 's|(.*)const string Version = "(.*)";|\2|p')" >> $GITHUB_ENV

      - name: Create release - tag - assets
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          artifacts: "${{ matrix.arch_type }}.tar.xz"
          replacesArtifacts: true
          tag: "v${{ env.btop_version }}"
          name: "btop ${{ env.btop_version }} "
          body: "btop ${{ env.btop_version }} built using https://github.com/userdocs/qbt-musl-cross-make"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
